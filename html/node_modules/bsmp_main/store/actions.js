import * as types from './mutation-types';
import api from '../api';

export default {

  /**
   * 登出
   * @param commit
   * @param params
   */
  logout: ({commit}, params) => {
    api.logout(params).then((res) => {
      commit(types.LOGOUT_SUCCESS, res.data);
      commit(types.CLEAR_FIRST_PATH);
    }).catch((error) => {});
  },

  /**
   * 获取菜单栏
   * @param commit
   * @param params
   */
  getCompanies: ({commit}, params) => {
    commit(types.GET_COMPANIES, params);
    api.getCompanies().then((res) => {
      commit(types.RECEIVE_COMPANIES, {error: null, data: res.data});
    }).catch((error) => {
      commit(types.RECEIVE_COMPANIES, {error, data: null});
    });
  },

  /**
   * 获取菜单栏
   * @param commit
   * @param params
   */
  getMenus: ({commit}, params) => {
    commit(types.GET_MENUS, params);
    api.getMenus(params).then((res) => {
      commit(types.RECEIVE_MENUS, {error: null, data: res.data});
    }).catch((error) => {
      commit(types.RECEIVE_MENUS, {error, data: null});
    });
  },

  /**
   * 获取操作功能
   * @param commit
   * @param path
   */
  getFuncs: ({commit, state}, {path, next}) => {
    let menuCode = state.menu.menuMap[path] || window.sessionStorage.getItem('menuCode');
    let roleCode = '', user = state.auth.user;
    if (!user) {
      user = window.sessionStorage.getItem('user') && JSON.parse(window.sessionStorage.getItem('user'));
    }
    if (user && user.data && user.data.roleCode) {
      roleCode = user.data.roleCode;
    }

    commit(types.GET_FUNCS, path);
    if (roleCode && menuCode) {
      window.sessionStorage.setItem('menuCode', menuCode);
      api.getFuncs({roleCode, menuCode}).then((res) => {
        commit(types.RECEIVE_FUNCS, {error: null, data: res.data});
        next && next();
      }).catch((error) => {
        commit(types.RECEIVE_FUNCS, {error, data: null});
        next && next();
      });
    } else {
      next && next();
    }
  }
};
